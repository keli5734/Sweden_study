
#### fig4A ####
{
  library(tidyverse)
  library(ggsci)
  color_blocks <- data.frame(
    xmin = as.Date(c("1998-07-06", "2009-06-29", "2010-06-28")), 
    xmax = as.Date(c("2009-06-29", "2010-06-28", "2016-06-27")),
    fill = c("#91bfdb", "#af8dc3", "#fc8d59")
  )
  mypal <- pal_npg("nrc", alpha = 0.7)(9)
  
  #prediction_df <- readRDS("all_simulations_fig3c.rds") %>% filter(date <= "2016-06-27")
  model1_pred <- readRDS("revision/model1.rds")
  model2_pred <- readRDS("revision/model2.rds")
  model3_pred <- readRDS("revision/model3.rds")
  
  RSV_data <- readRDS("data_process/clean_data_RSV_FLU_subset.rds")
 
   facet_labels <- c(
    Model1 = TeX("Model 1: $\\xi_1 = \\xi_2 = \\xi_3$"),
    Model2 = TeX("Model 2: $\\xi_1, \\xi_2 = \\xi_3$"),
    Model3 = TeX("Model 3: $\\xi_1, \\xi_2, \\xi_3$")
  )
  
  
  prediction_df2 <- data.frame(hosp = c(model1_pred, model2_pred, model3_pred, RSV_data$RSV, RSV_data$RSV, RSV_data$RSV), 
                               date = rep(RSV_data$date), 
                               type = rep(c("Model 1 prediction", "Model 2 prediction",
                                            "Model 3 prediction", "RSV admission data 1",
                                            "RSV admission data 2", "RSV admission data 3"), each = 936)) %>% 
    mutate(group = ifelse(type %in% c("Model 1 prediction", "RSV admission data 1"), "Model 1", 
                          ifelse(type %in% c("Model 2 prediction", "RSV admission data 2"), "Model 2", "Model 3")))
  
  
  
  
  Fig4A <- prediction_df2 %>% 
    ggplot() +
    geom_line(aes(x = date, y = hosp, color = type, linewidth = type), alpha = 1) +
    scale_linewidth_manual(name = NULL, guide = "none",
                           values = c("Model 1 prediction" = 1.5, 
                                      "Model 2 prediction" = 1.5,
                                      "Model 3 prediction" = 1.5,
                                      "RSV admission data 1" = .8,
                                      "RSV admission data 2" = .8,
                                      "RSV admission data 3" = .8)) +
    theme_minimal()  +
    geom_rect(data = color_blocks, aes(xmin = xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill = fill), alpha = 0.05) +
    scale_fill_lancet(name = NULL,
                      guide = "none")+
    scale_color_manual(name = NULL,
                       values = c(
                         "RSV admission data 1" = "black",
                         "RSV admission data 2" = "black",
                         "RSV admission data 3" = "black",
                         "Model 1 prediction" = "#74add1",
                         "Model 2 prediction" = "#74add1",
                         "Model 3 prediction" = "#74add1"),
                       guide = "none") +
    labs(y = "Weekly RSV admission",
         x = "Date") +
    guides(alpha = "none") +
    scale_y_continuous(limits = c(0,50))  +
    theme(panel.border = element_blank(), axis.line = element_line(colour = "black")) +
    theme(
      axis.text.x = element_text(face="bold"),
      axis.text.y = element_text(face="bold"),
      axis.title.x = element_text(face="bold"),
      axis.title.y = element_text(face="bold"),
      plot.title = element_text(face="bold", hjust = 0.5),
      #axis.line = element_blank(),
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank(),
      legend.position = "top") +
    theme(axis.text.x = element_text(color="black",
                                     size = 15, angle=0),
          axis.text.y = element_text(color="black",
                                     size= 15, angle=0),
          text = element_text(size = 15))  + 
    facet_wrap(~ group, nrow = 3) +
    theme(strip.text = element_text(size = 15, face = "bold"))
  
  Fig4A
}

#### fig4B and fig4C ####

model1_pred <- readRDS("revision/model1.rds")
model2_pred <- readRDS("revision/model2.rds")
model3_pred <- readRDS("revision/model3.rds")
RSV_data <- readRDS("data_process/clean_data_RSV_FLU_subset.rds")


peak_value_pred <- data.frame(hosp = model3_pred, 
                              season = RSV_data$season,
                              wk = rep(1:52)) %>% 
  group_by(season) %>% 
  summarise(peak_value = max(hosp)) 

peak_value_pred1 <- data.frame(hosp = model1_pred, 
                              season = RSV_data$season,
                              wk = rep(1:52)) %>% 
  group_by(season) %>% 
  summarise(peak_value = max(hosp)) 

peak_value_pred2 <- data.frame(hosp = model2_pred, 
                              season = RSV_data$season,
                              wk = rep(1:52)) %>% 
  group_by(season) %>% 
  summarise(peak_value = max(hosp)) 


peak_value_data <- RSV_data %>% 
  group_by(season) %>% 
  summarise(peak_value = max(RSV))

peak_values.df <- data.frame(peak_value_data = peak_value_data$peak_value, 
                             peak_value_pred = peak_value_pred$peak_value, 
                             peak_value_pred1 = peak_value_pred1$peak_value, 
                             peak_value_pred2 = peak_value_pred2$peak_value)

cor.test(peak_values.df$peak_value_data, peak_values.df$peak_value_pred2)

Fig4C <- ggplot(peak_values.df) +
  scale_x_continuous(limits = c(0, 40)) +
  scale_y_continuous(limits = c(0, 40)) + 
  geom_point(aes(x = peak_value_pred, y = peak_value_data), color = "#74a9cf", alpha = 1, size = 8)+
  geom_abline(intercept = 0, slope = 1, color = "black", linetype = "dashed") +
  annotate("text", x = 10, y = 38, label = "Correlation Coefficient: 0.74\np-value: < 0.001",
           color = "black", size = 5) + 
  ylab("RSV intensity (Data)") + 
  xlab("RSV intensity (model predictions)") +
  theme_minimal()+
  theme(panel.border = element_blank(), axis.line = element_line(colour = "black")) +
  theme(
    axis.text.x = element_text(face="bold"),
    axis.text.y = element_text(face="bold"),
    axis.title.x = element_text(face="bold"),
    axis.title.y = element_text(face="bold"),
    plot.title = element_text(face="bold", hjust = 0.5),
    #axis.line = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    legend.position = "NA") + 
  theme(axis.text.x = element_text(color="black",
                                   size = 15, angle=0),
        axis.text.y = element_text(color="black",
                                   size= 15, angle=0),
        text = element_text(size = 15))  
 





gravity_pred <- data.frame(hosp = model3_pred, 
                           season = RSV_data$season,
                           wk = rep(1:52))  %>% 
  group_by(season) %>% 
  mutate(weight = hosp/sum(hosp)) %>% 
  summarise(centre_of_gravity = sum(wk*weight)) 

gravity_data <- RSV_data %>% 
  group_by(season) %>% 
  mutate(weight = RSV/sum(RSV)) %>% 
  summarise(centre_of_gravity = sum(epi_week_cdc*weight)) 

gravity.df <- data.frame(gravity_data = gravity_data$centre_of_gravity, 
                         gravity_pred = gravity_pred$centre_of_gravity)

cor.test(gravity.df$gravity_pred, gravity.df$gravity_data)


Fig4B <- ggplot(gravity.df, aes(x = gravity_data, y = gravity_pred)) +
  
  scale_x_continuous(limits = c(25, 40)) +
  scale_y_continuous(limits = c(25, 40)) + 
  geom_point(color = "#74a9cf", alpha = 1, size = 8)+
  geom_abline(intercept = 0, slope = 1, color = "black", linetype = "dashed") +
  annotate("text", x = 28, y = 39, label = "Correlation Coefficient: 0.77\np-value: <0.001",
           color = "black", size = 5) + 
  ylab("Center of gravity (Data)") + 
  xlab("Center of gravity (model predictions)") +
  theme_minimal()+
  theme(panel.border = element_blank(), axis.line = element_line(colour = "black")) +
  theme(
    axis.text.x = element_text(face="bold"),
    axis.text.y = element_text(face="bold"),
    axis.title.x = element_text(face="bold"),
    axis.title.y = element_text(face="bold"),
    plot.title = element_text(face="bold", hjust = 0.5),
    #axis.line = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    legend.position = "NA") + 
  theme(axis.text.x = element_text(color="black",
                                   size = 15, angle=0),
        axis.text.y = element_text(color="black",
                                   size= 15, angle=0),
        text = element_text(size = 15))   



Fig4BC <- ggarrange(Fig4B, Fig4C,
                    nrow = 1,
                    ncol = 2,
                    labels = c("B", "C"),                                   
                    font.label = list(size = 20, color = "black"))
 


Fig4 <- ggarrange(Fig4A, Fig4BC,
                  nrow = 2,
                  ncol = 1,
                  labels = c("A", ""),   
                  heights = c(0.6,0.4),
                  font.label = list(size = 20, color = "black"))
Fig4
